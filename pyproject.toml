[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dbt2lookml"
version = "0.2.5"
description = "Generate lookml views from bigquery via dbt models"
authors = [
    {name = "Magnus Eriksson", email = "magnus@ffcg.se"}
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "lkml>=1.1",
    "pydantic>=2.9",
    "PyYAML>=5.0",
    "typing-extensions>=4.0",
    "importlib-metadata>=4",
    "rich>=13.9.4",
    "unidecode>=1.3.0",
    "parsimonious>=0.10.0",
]

[project.optional-dependencies]
dev = [
    "debugpy>=1.8.8",
    "pytest>=8.3.3",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
    "datamodel-code-generator>=0.26.3",
    "twine>=6.1.0",
    "vulture>=2.14",
    "mkdocs-material>=9.6.18",
    "mkdocstrings[python]>=0.30.0",
    "mypy>=1.17.1",
    "types-pyyaml>=6.0.12.20250822",
    "black>=23.0",
    "isort>=5.0",
    "flake8>=6.0",
    "tox>=4.0",
]
test = [
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
]

[project.urls]
Homepage = "https://github.com/magnus-ffcg/dbt2lookml"
Repository = "https://github.com/magnus-ffcg/dbt2lookml"
Documentation = "https://magnus-ffcg.github.io/dbt2lookml"
Changelog = "https://github.com/magnus-ffcg/dbt2lookml/blob/main/CHANGELOG.md"

[project.scripts]
dbt2lookml = "dbt2lookml.cli:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["dbt2lookml"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.bumpversion]
current_version = "0.2.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[tool.pytest]
mock_use_standalone_module = true

[tool.black]
skip-string-normalization = true
line-length = 130
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 130
known_first_party = "kelvin"
profile = "black"

[tool.flake8]
max-line-length = 130

[tool.datamodel-codegen]
field-constraints = true
snake-case-field = true
strip-default-none = false
target-python-version = "3.12"

[tool.vulture]
# Vulture configuration for dead code detection
min_confidence = 80
paths = ["dbt2lookml", "tests"]
ignore_decorators = ["@pytest.fixture", "@property", "@staticmethod", "@classmethod"]
ignore_names = ["_*", "test_*", "*_test", "setUp", "tearDown"]

[tool.uv]
dev-dependencies = [
    "debugpy>=1.8.8",
    "pytest>=8.3.3",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
    "datamodel-code-generator>=0.26.3",
    "twine>=6.1.0",
    "vulture>=2.14",
    "mkdocs-material>=9.6.18",
    "mkdocstrings[python]>=0.30.0",
    "mypy>=1.17.1",
    "types-pyyaml>=6.0.12.20250822",
    "black>=23.0",
    "isort>=5.0",
    "flake8>=6.0",
    "tox>=4.0",
]